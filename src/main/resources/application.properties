#spring.datasource.url=jdbc:mysql://localhost:3306/sensordatacenter?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.druid.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.druid.max-active=20
#spring.datasource.druid.initial-size=5
#spring.datasource.druid.max-wait=60000
#spring.datasource.druid.min-idle=1
#spring.datasource.druid.time-between-eviction-runs-millis=3600
#spring.datasource.druid.min-evictable-idle-time-millis=3600
#spring.datasource.druid.validation-query=select 1
#spring.datasource.druid.test-while-idle=true
#spring.datasource.druid.test-on-borrow=true
#spring.datasource.druid.test-on-return=true

##mybatis
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
mybatis.config-location=classpath:mybatis-config.xml

###sharding-jdbc规则配置
##数据源名称，多数据源以逗号分隔
spring.shardingsphere.datasource.names=ds0,ds1

#数据库连接池类名称
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/ds0?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

#分库
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}

#t_order分表
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order$->{0..1}
#分片列名称
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_orer.table-strategy.inline.algorithm-expression=t_order$->{order_id % 2}
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=ds$->{order_id % 2}

#t_order_item分表
spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t.order_item$->{0..1}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}
spring.shardingsphere.sharding.tables.t_order_item.database-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.database-strategy.inline.algorithm-expression=ds$->{order_id % 2}